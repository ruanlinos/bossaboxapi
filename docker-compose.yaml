version: '2.4'
services:
  api:
    build: .
    container_name: bossabox-api
    command: ['yarn', 'dev']
    volumes:
      - .:/usr/src/
    depends_on:
      database:
        condition: service_healthy
    ports:
      - '3000:3000'
      - '9229:9229'
    networks:
      - bossa-network
    env_file: .env

  database:
    image: postgres:11.2-alpine
    container_name: bossabox-database
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: bossabox
      POSTGRES_DB: vuttr
    ports:
      - '5432:5432'
    networks:
      - bossa-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  migration:
    build: .
    command: ['yarn', 'migrate']
    depends_on:
      database:
        condition: service_healthy
    networks:
      - bossa-network
  seed:
    build: .
    command: ['yarn', 'seed']
    depends_on:
      database:
        condition: service_healthy
    networks:
      - bossa-network
  test:
    build: .
    command: ['yarn', 'test']
    depends_on:
      - database-test
    networks:
      - bossa-test-network

  database-test:
    image: postgres:11.2-alpine
    container_name: bossabox-db-test
    environment:
      POSTGRES_PASSWORD: secret
      POSTGRES_USER: bossabox
      POSTGRES_DB: vuttr
    ports:
      - '5432:5432'
    networks:
      - bossa-test-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  bossa-network:
    driver: bridge
  bossa-test-network:
    driver: bridge
